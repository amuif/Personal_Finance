/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UpdatePasswordRouteImport } from './routes/update-password'
import { Route as PasswordResetRouteImport } from './routes/password-reset'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LandingRouteImport } from './routes/landing'
import { Route as ComingSoonRouteImport } from './routes/coming-soon'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedWalletRouteImport } from './routes/_authenticated/wallet'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedPlansRouteImport } from './routes/_authenticated/plans'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedCreateRouteImport } from './routes/_authenticated/create'
import { Route as AuthenticatedConsultRouteImport } from './routes/_authenticated/consult'

const UpdatePasswordRoute = UpdatePasswordRouteImport.update({
  id: '/update-password',
  path: '/update-password',
  getParentRoute: () => rootRouteImport,
} as any)
const PasswordResetRoute = PasswordResetRouteImport.update({
  id: '/password-reset',
  path: '/password-reset',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRoute = LandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRouteImport,
} as any)
const ComingSoonRoute = ComingSoonRouteImport.update({
  id: '/coming-soon',
  path: '/coming-soon',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedWalletRoute = AuthenticatedWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedPlansRoute = AuthenticatedPlansRouteImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedCreateRoute = AuthenticatedCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedConsultRoute = AuthenticatedConsultRouteImport.update({
  id: '/consult',
  path: '/consult',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/coming-soon': typeof ComingSoonRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/password-reset': typeof PasswordResetRoute
  '/update-password': typeof UpdatePasswordRoute
  '/consult': typeof AuthenticatedConsultRoute
  '/create': typeof AuthenticatedCreateRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/plans': typeof AuthenticatedPlansRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/wallet': typeof AuthenticatedWalletRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/coming-soon': typeof ComingSoonRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/password-reset': typeof PasswordResetRoute
  '/update-password': typeof UpdatePasswordRoute
  '/consult': typeof AuthenticatedConsultRoute
  '/create': typeof AuthenticatedCreateRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/plans': typeof AuthenticatedPlansRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/wallet': typeof AuthenticatedWalletRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/coming-soon': typeof ComingSoonRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/password-reset': typeof PasswordResetRoute
  '/update-password': typeof UpdatePasswordRoute
  '/_authenticated/consult': typeof AuthenticatedConsultRoute
  '/_authenticated/create': typeof AuthenticatedCreateRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/plans': typeof AuthenticatedPlansRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/wallet': typeof AuthenticatedWalletRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/coming-soon'
    | '/landing'
    | '/login'
    | '/password-reset'
    | '/update-password'
    | '/consult'
    | '/create'
    | '/dashboard'
    | '/plans'
    | '/profile'
    | '/settings'
    | '/wallet'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/coming-soon'
    | '/landing'
    | '/login'
    | '/password-reset'
    | '/update-password'
    | '/consult'
    | '/create'
    | '/dashboard'
    | '/plans'
    | '/profile'
    | '/settings'
    | '/wallet'
  id:
    | '__root__'
    | '/_authenticated'
    | '/about'
    | '/coming-soon'
    | '/landing'
    | '/login'
    | '/password-reset'
    | '/update-password'
    | '/_authenticated/consult'
    | '/_authenticated/create'
    | '/_authenticated/dashboard'
    | '/_authenticated/plans'
    | '/_authenticated/profile'
    | '/_authenticated/settings'
    | '/_authenticated/wallet'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  ComingSoonRoute: typeof ComingSoonRoute
  LandingRoute: typeof LandingRoute
  LoginRoute: typeof LoginRoute
  PasswordResetRoute: typeof PasswordResetRoute
  UpdatePasswordRoute: typeof UpdatePasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/update-password': {
      id: '/update-password'
      path: '/update-password'
      fullPath: '/update-password'
      preLoaderRoute: typeof UpdatePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/password-reset': {
      id: '/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof PasswordResetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coming-soon': {
      id: '/coming-soon'
      path: '/coming-soon'
      fullPath: '/coming-soon'
      preLoaderRoute: typeof ComingSoonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/wallet': {
      id: '/_authenticated/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof AuthenticatedWalletRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/plans': {
      id: '/_authenticated/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof AuthenticatedPlansRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/create': {
      id: '/_authenticated/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof AuthenticatedCreateRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/consult': {
      id: '/_authenticated/consult'
      path: '/consult'
      fullPath: '/consult'
      preLoaderRoute: typeof AuthenticatedConsultRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedConsultRoute: typeof AuthenticatedConsultRoute
  AuthenticatedCreateRoute: typeof AuthenticatedCreateRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedPlansRoute: typeof AuthenticatedPlansRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedWalletRoute: typeof AuthenticatedWalletRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedConsultRoute: AuthenticatedConsultRoute,
  AuthenticatedCreateRoute: AuthenticatedCreateRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedPlansRoute: AuthenticatedPlansRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedWalletRoute: AuthenticatedWalletRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  ComingSoonRoute: ComingSoonRoute,
  LandingRoute: LandingRoute,
  LoginRoute: LoginRoute,
  PasswordResetRoute: PasswordResetRoute,
  UpdatePasswordRoute: UpdatePasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
